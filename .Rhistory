gato<-groupy %>% gather(year,expenditure,-quantile)
ggplot(gato,aes(x=year,y=expenditure, group=quantile,colour=as.factor(quantile)))+ geom_line()
library(dplyr)
library(tidyr)
library(ggplot2)
df.per.capita<- read.csv('data/API_SH.XPD.PCAP_DS2_en_csv_v2.csv',skip = 4,stringsAsFactors = FALSE)
str(df.per.capita)
missing.years<- c(1960:1994,2015:2016)
missing.years.columns<- paste0("X",missing.years)
valid.years<- c(1995:2014)
valid.years.columns<- paste0("X",valid.years)
df.per.capita<-df.per.capita %>% select(-one_of(missing.years.columns))
## drop the countries with missing data
df.per.capita<-df.per.capita %>% filter(!is.na(X1995))
str(df.per.capita)
df.per.capita <- df.per.capita %>%    mutate(quantile = ntile(X2014, 4)) %>% arrange((quantile))
df.per.capita$quantile<- df.per.capita %>% mutate(ifelse(quantile==1,"First Quartile",quantile))
groupy <-df.per.capita %>% group_by(quantile) %>% summarise_at(valid.years.columns,funs(mean))
library(dplyr)
library(tidyr)
library(ggplot2)
df.per.capita<- read.csv('data/API_SH.XPD.PCAP_DS2_en_csv_v2.csv',skip = 4,stringsAsFactors = FALSE)
str(df.per.capita)
missing.years<- c(1960:1994,2015:2016)
missing.years.columns<- paste0("X",missing.years)
valid.years<- c(1995:2014)
valid.years.columns<- paste0("X",valid.years)
df.per.capita<-df.per.capita %>% select(-one_of(missing.years.columns))
## drop the countries with missing data
df.per.capita<-df.per.capita %>% filter(!is.na(X1995))
str(df.per.capita)
df.per.capita <- df.per.capita %>%    mutate(quantile = ntile(X2014, 4)) %>% arrange((quantile))
df.per.capita<- df.per.capita %>% mutate(ifelse(quantile==1,"First Quartile",quantile))
groupy <-df.per.capita %>% group_by(quantile) %>% summarise_at(valid.years.columns,funs(mean))
gato<-groupy %>% gather(year,expenditure,-quantile)
ggplot(gato,aes(x=year,y=expenditure, group=quantile,colour=as.factor(quantile)))+ geom_line()
ggplot(gato,aes(x=year,y=expenditure, group=quantile,colour=quantile))+ geom_line()
library(dplyr)
library(tidyr)
library(ggplot2)
df.per.capita<- read.csv('data/API_SH.XPD.PCAP_DS2_en_csv_v2.csv',skip = 4,stringsAsFactors = FALSE)
str(df.per.capita)
missing.years<- c(1960:1994,2015:2016)
missing.years.columns<- paste0("X",missing.years)
valid.years<- c(1995:2014)
valid.years.columns<- paste0("X",valid.years)
df.per.capita<-df.per.capita %>% select(-one_of(missing.years.columns))
## drop the countries with missing data
df.per.capita<-df.per.capita %>% filter(!is.na(X1995))
str(df.per.capita)
df.per.capita <- df.per.capita %>%    mutate(quantile = ntile(X2014, 4)) %>% arrange((quantile))
df.per.capita<- df.per.capita %>% mutate(ifelse(quantile==1,"First Quartile","Second Quartile"))
groupy <-df.per.capita %>% group_by(quantile) %>% summarise_at(valid.years.columns,funs(mean))
gato<-groupy %>% gather(year,expenditure,-quantile)
ggplot(gato,aes(x=year,y=expenditure, group=quantile,colour=quantile))+ geom_line()
library(dplyr)
library(tidyr)
library(ggplot2)
df.per.capita<- read.csv('data/API_SH.XPD.PCAP_DS2_en_csv_v2.csv',skip = 4,stringsAsFactors = FALSE)
str(df.per.capita)
missing.years<- c(1960:1994,2015:2016)
missing.years.columns<- paste0("X",missing.years)
valid.years<- c(1995:2014)
valid.years.columns<- paste0("X",valid.years)
df.per.capita<-df.per.capita %>% select(-one_of(missing.years.columns))
## drop the countries with missing data
df.per.capita<-df.per.capita %>% filter(!is.na(X1995))
str(df.per.capita)
df.per.capita <- df.per.capita %>%    mutate(quantile = ntile(X2014, 4)) %>% arrange((quantile))
df.per.capita<- df.per.capita %>% mutate(quantile = ifelse(quantile==1,"First Quartile","Second Quartile"))
groupy <-df.per.capita %>% group_by(quantile) %>% summarise_at(valid.years.columns,funs(mean))
gato<-groupy %>% gather(year,expenditure,-quantile)
ggplot(gato,aes(x=year,y=expenditure, group=quantile,colour=quantile))+ geom_line()
library(dplyr)
library(tidyr)
library(ggplot2)
df.per.capita<- read.csv('data/API_SH.XPD.PCAP_DS2_en_csv_v2.csv',skip = 4,stringsAsFactors = FALSE)
str(df.per.capita)
missing.years<- c(1960:1994,2015:2016)
missing.years.columns<- paste0("X",missing.years)
valid.years<- c(1995:2014)
valid.years.columns<- paste0("X",valid.years)
df.per.capita<-df.per.capita %>% select(-one_of(missing.years.columns))
## drop the countries with missing data
df.per.capita<-df.per.capita %>% filter(!is.na(X1995))
str(df.per.capita)
df.per.capita <- df.per.capita %>%    mutate(quantile = ntile(X2014, 4)) %>% arrange((quantile))
df.per.capita<- df.per.capita %>% mutate(quantile = ifelse(quantile==1,"First Quartile",quantile))
groupy <-df.per.capita %>% group_by(quantile) %>% summarise_at(valid.years.columns,funs(mean))
gato<-groupy %>% gather(year,expenditure,-quantile)
ggplot(gato,aes(x=year,y=expenditure, group=quantile,colour=quantile))+ geom_line()
library(dplyr)
library(tidyr)
library(ggplot2)
df.per.capita<- read.csv('data/API_SH.XPD.PCAP_DS2_en_csv_v2.csv',skip = 4,stringsAsFactors = FALSE)
str(df.per.capita)
missing.years<- c(1960:1994,2015:2016)
missing.years.columns<- paste0("X",missing.years)
valid.years<- c(1995:2014)
valid.years.columns<- paste0("X",valid.years)
df.per.capita<-df.per.capita %>% select(-one_of(missing.years.columns))
## drop the countries with missing data
df.per.capita<-df.per.capita %>% filter(!is.na(X1995))
str(df.per.capita)
df.per.capita <- df.per.capita %>%    mutate(quantile = ntile(X2014, 4)) %>% arrange((quantile))
df.per.capita<- df.per.capita %>% mutate(quantile = ifelse(quantile==1,"First Quartile",quantile))
df.per.capita<- df.per.capita %>% mutate(quantile = ifelse(quantile==2,"Second Quartile",quantile))
df.per.capita<- df.per.capita %>% mutate(quantile = ifelse(quantile==3,"Third Quartile",quantile))
df.per.capita<- df.per.capita %>% mutate(quantile = ifelse(quantile==4,"Fourth Quartile",quantile))
groupy <-df.per.capita %>% group_by(quantile) %>% summarise_at(valid.years.columns,funs(mean))
gato<-groupy %>% gather(year,expenditure,-quantile)
ggplot(gato,aes(x=year,y=expenditure, group=quantile,colour=quantile))+ geom_line()
library(OpenStreetMap)
library(leaflet)
library(rgdal)
library(dplyr)
library(purrr)
library(htmlwidgets)
library(RColorBrewer)
library(classInt)
library(plotrix)
library(ggmap)
library(magick)
library(ggthemes)
library(scales)
library(lubridate)
df_light<-read.csv('data/listings/2017_05.csv',stringsAsFactors = FALSE)
# df_light<- df_light %>% filter(grepl('Mitte',neighbourhood_group))
library(jsonlite)
# From http://data.okfn.org/data/datasets/geo-boundaries-world-110m
geojson <- readLines("berliner_mauer.geojson", warn = FALSE) %>%
paste(collapse = "\n") %>%
fromJSON(simplifyVector = FALSE)
# Default styles for all features
geojson$style = list(
weight = 2,
color = 'red',
opacity = 1,
fillOpacity = 0
)
paletta <- colorQuantile(
palette = "YlGnBu",
domain = df_light$price)
m<-leaflet(data = df_light) %>% addTiles() %>%   addProviderTiles(providers$CartoDB.Positron)%>%
addCircleMarkers(~longitude, ~latitude, popup = ~as.character(name), label = ~as.character(name),stroke = FALSE, fillOpacity = 0.8,color = ~pal(price),radius=4) %>% addLegend("bottomright", pal = paletta, values = ~price,title = "Price per night - Quartiles",labFormat = labelFormat(prefix = "€")) %>% addLegend("topright",title = "Berlin Wall",col=1,labels=1) %>%  addGeoJSON(geojson)
library(OpenStreetMap)
library(leaflet)
library(rgdal)
library(dplyr)
library(purrr)
library(htmlwidgets)
library(RColorBrewer)
library(classInt)
library(plotrix)
library(ggmap)
library(magick)
library(ggthemes)
library(scales)
library(lubridate)
df_light<-read.csv('data/listings/2017_05.csv',stringsAsFactors = FALSE)
# df_light<- df_light %>% filter(grepl('Mitte',neighbourhood_group))
library(jsonlite)
# From http://data.okfn.org/data/datasets/geo-boundaries-world-110m
geojson <- readLines("berliner_mauer.geojson", warn = FALSE) %>%
paste(collapse = "\n") %>%
fromJSON(simplifyVector = FALSE)
# Default styles for all features
geojson$style = list(
weight = 2,
color = 'red',
opacity = 1,
fillOpacity = 0
)
paletta <- colorQuantile(
palette = "YlGnBu",
domain = df_light$price)
m<-leaflet(data = df_light) %>% addTiles() %>%   addProviderTiles(providers$CartoDB.Positron)%>%
addCircleMarkers(~longitude, ~latitude, popup = ~as.character(name), label = ~as.character(name),stroke = FALSE, fillOpacity = 0.8,color = ~pal(price),radius=4) %>% addLegend("bottomright", pal = paletta, values = ~price,title = "Price per night - Quartiles",labFormat = labelFormat(prefix = "€")) %>% addLegend("topright",title = "Berlin Wall",col=1,labels=1) %>%  addGeoJSON(geojson)
pal <- colorQuantile(
palette = "YlGnBu",
n = 4,
domain = df_light$reviews_per_month)
m2<-leaflet(data = df_light) %>% addTiles() %>%   addProviderTiles(providers$CartoDB.Positron)%>%
addCircleMarkers(~longitude, ~latitude, popup = ~as.character(name), label = ~as.character(name),stroke = FALSE, fillOpacity = 0.8,color = ~pal(reviews_per_month),radius=4) %>%   addLegend("bottomright", pal = pal, values = ~reviews_per_month,title = "Price per night - Quartiles",labFormat = labelFormat(prefix = "€")) %>% addLegend("topright",title = "Berlin Wall",col=1,labels=1) %>%  addGeoJSON(geojson)
m2
saveWidget(m, file="m2.html", selfcontained = TRUE)
library(OpenStreetMap)
library(leaflet)
library(rgdal)
library(dplyr)
library(purrr)
library(htmlwidgets)
library(RColorBrewer)
library(classInt)
library(plotrix)
library(ggmap)
library(magick)
library(ggthemes)
library(scales)
library(lubridate)
df_light<-read.csv('data/listings/2017_05.csv',stringsAsFactors = FALSE)
# df_light<- df_light %>% filter(grepl('Mitte',neighbourhood_group))
library(jsonlite)
# From http://data.okfn.org/data/datasets/geo-boundaries-world-110m
geojson <- readLines("berliner_mauer.geojson", warn = FALSE) %>%
paste(collapse = "\n") %>%
fromJSON(simplifyVector = FALSE)
# Default styles for all features
geojson$style = list(
weight = 2,
color = 'red',
opacity = 1,
fillOpacity = 0
)
pal <- colorQuantile(
palette = "YlGnBu",
n = 4,
domain = df_light$reviews_per_month)
m2<-leaflet(data = df_light) %>% addTiles() %>%   addProviderTiles(providers$CartoDB.Positron)%>%
addCircleMarkers(~longitude, ~latitude, popup = ~as.character(name), label = ~as.character(name),stroke = FALSE, fillOpacity = 0.8,color = ~pal(reviews_per_month),radius=4) %>%   addLegend("bottomright", pal = pal, values = ~reviews_per_month,title = "Price per night - Quartiles",labFormat = labelFormat(prefix = "€")) %>% addLegend("topright",title = "Berlin Wall",col=1,labels=1) %>%  addGeoJSON(geojson)
m2
saveWidget(m, file="m2.html", selfcontained = TRUE)
library(OpenStreetMap)
library(leaflet)
library(rgdal)
library(dplyr)
library(purrr)
library(htmlwidgets)
library(RColorBrewer)
library(classInt)
library(plotrix)
library(ggmap)
library(magick)
library(ggthemes)
library(scales)
library(lubridate)
df_light<-read.csv('data/listings/2017_05.csv',stringsAsFactors = FALSE)
# df_light<- df_light %>% filter(grepl('Mitte',neighbourhood_group))
library(jsonlite)
# From http://data.okfn.org/data/datasets/geo-boundaries-world-110m
geojson <- readLines("berliner_mauer.geojson", warn = FALSE) %>%
paste(collapse = "\n") %>%
fromJSON(simplifyVector = FALSE)
# Default styles for all features
geojson$style = list(
weight = 2,
color = 'red',
opacity = 1,
fillOpacity = 0
)
pal <- colorQuantile(
palette = "YlGnBu",
n = 4,
domain = df_light$reviews_per_month)
m2<-leaflet(data = df_light) %>% addTiles() %>%   addProviderTiles(providers$CartoDB.Positron)%>%
addCircleMarkers(~longitude, ~latitude, popup = ~as.character(name), label = ~as.character(name),stroke = FALSE, fillOpacity = 0.8,color = ~pal(reviews_per_month),radius=4) %>%   addLegend("bottomright", pal = pal, values = ~reviews_per_month,title = "Price per night - Quartiles",labFormat = labelFormat(prefix = "€")) %>% addLegend("topright",title = "Berlin Wall",col=1,labels=1) %>%  addGeoJSON(geojson)
m2
saveWidget(m2, file="m2.html", selfcontained = TRUE)
df_wedding<-df_light %>% filter(grepl('Mitte',neighbourhood_group))
range_lat<-range(df_wedding$latitude)
range_lon<-range(df_wedding$longitude)
# # téléchargement de la carte
# mapBerlin <- openmap(upperLeft = c(range_lat[1], range_lon[1]),
#                   lowerRight = c(range_lat[2], range_lon[2]),
#                   type = "stamen-toner")
# # affichage de la carte
# df_wedding <- cbind(df_wedding,projectMercator(df_wedding$latitude,df_wedding$longitude))
ggmap_berlin<- get_map(location = c(left = range_lon[1], bottom = range_lat[1], right =
range_lon[2], top = range_lat[2]),source="google",color="bw")
plot_map<- function(df,title){
title <-strsplit(title,'.csv')[[1]]
col_neighbour<- grep('neigh',colnames(df),value = TRUE)
df_mitte<-df %>% filter(grepl('Mitte',neighbourhood_group))
color_hex_max='#ff5a5f'
color_hex_min ='#0dc24b'
col <- findColours(classIntervals(
df_mitte$price, 5, style="quantile"),
smoothColors(color_hex_min,3,color_hex_max))
ggmap(ggmap_berlin)+ geom_point(aes(x=longitude, y=latitude), data=df_mitte, col=color_hex_max)+ggtitle(title)+theme(plot.title = element_text(size = 40, face = "bold"))+  theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank())
ggsave(filename = paste0("./data/maps/",title,".png"),
width = 8,height=8,dpi = 150)
}
filos<- list.files(path = "data/listings/")
print(filos)
for (filo in filos){
file_path = paste0("data/listings/",filo)
df<-read.csv(file_path, stringsAsFactors = FALSE)
plot_map(df,filo)
}
list.files(path = "./data/maps/single_anim/", pattern = "*.png", full.names = T) %>%
map(image_read) %>% # reads each path file
image_join() %>% # joins image
image_animate(fps=1) %>% # animates, can opt for number of loops
image_write("ndwi_aug_hgm.gif") # write to current dir
df_neighbourhood <- data.frame()
for (filo in filos){
file_path = paste0("data/listings/",filo)
df<-read.csv(file_path, stringsAsFactors = FALSE)
df<- df %>% filter(room_type=='Entire home/apt')
groupy<-df %>% group_by(neighbourhood_group) %>% summarise(total_offers = n(), mean_price=mean(price))
year_month<-strsplit(filo,'.csv')[[1]]
groupy$year<-as.integer(strsplit(year_month,'_')[[1]][1])
groupy$month<-as.integer(strsplit(year_month,'_')[[1]][2])
df_neighbourhood<-rbind(df_neighbourhood,groupy)
}
df_neighbourhood<- df_neighbourhood %>% ungroup()
df_neighbourhood$date <- with(df_neighbourhood, ymd(sprintf('%04d%02d%02d', year, month, 1)))
#df_neighbourhood <- df_neighbourhood %>% filter(neighbourhood_group %in% c())
top_6 <- c("Charlottenburg-Wilm.","Friedrichshain-Kreuzberg","Mitte","Neukölln","Pankow","Tempelhof - Schöneberg")
mitte.areas<- c("Alexanderplatz","Brunnenstr. Nord","Brunnenstr. Süd","Moabit Ost","Moabit West","Osloer Straße" , "Parkviertel",       "Regierungsviertel","Tiergarten Süd","Wedding Zentrum")
df_neighbourhood <- df_neighbourhood %>% filter(neighbourhood_group %in% top_6)
palette<-c("#075272","#ca3016","#ffba00","#23907b", "#897a8d","#70ddca")
ggplot(data=df_neighbourhood ,aes(x=date,y=total_offers,colour=neighbourhood_group))+theme_fivethirtyeight()+ geom_line(,size=1)+labs(colour="")+ theme(axis.title = element_text(),axis.title.x=element_blank(), axis.text.x = element_text(angle = 90, hjust = 1),legend.text=element_text(size=10),plot.caption=element_text(size=8))+scale_x_date(breaks = pretty_breaks(15))+scale_colour_manual(values = palette)+ ggtitle("Berlin : Full appartments")+labs(caption = "©Clément Lefèvre 2017 (Sources : insideairbnb.com)")+ylab("online offers")
ggplot(data=df_neighbourhood ,aes(x=date,y=mean_price,colour=neighbourhood_group))+theme_fivethirtyeight()+ geom_line(,size=1)+labs(colour="")+ theme(axis.title = element_text(), axis.title.x=element_blank(), axis.text.x = element_text(angle = 90, hjust = 1),legend.text=element_text(size=10),plot.caption=element_text(size=8))+scale_x_date(breaks = pretty_breaks(15))+scale_colour_manual(values = palette)+ ggtitle("Berlin : Full appartments")+labs(caption = "©Clément Lefèvre 2017 (Sources : insideairbnb.com)")+ylab("euros/night")
df.may2017<-read.csv('data/listings/2017_05.csv')
df.mitte.2017 <- df.may2017 %>% filter(neighbourhood_group=='Mitte')
groupy.mitte.may.2017<- df.mitte.2017 %>% ungroup() %>% group_by(neighbourhood) %>% summarise(total= n())
groupy.mitte.may.2017  %>% select(neighbourhood) %>% collect %>% .[["neighbourhood"]]
df_neighbourhood.mitte <- data.frame()
for (filo in filos){
file_path = paste0("data/listings/",filo)
df<-read.csv(file_path, stringsAsFactors = FALSE)
df<- df %>% filter(room_type=='Entire home/apt') %>% filter(neighbourhood %in% mitte.areas)
groupy<-df %>% group_by(neighbourhood) %>% summarise(total_offers = n(), mean_price=mean(price))
year_month<-strsplit(filo,'.csv')[[1]]
groupy$year<-as.integer(strsplit(year_month,'_')[[1]][1])
groupy$month<-as.integer(strsplit(year_month,'_')[[1]][2])
df_neighbourhood.mitte<-rbind(df_neighbourhood.mitte,groupy)
}
df_neighbourhood.mitte<- df_neighbourhood.mitte %>% ungroup()
df_neighbourhood.mitte$date <- with(df_neighbourhood.mitte, ymd(sprintf('%04d%02d%02d', year, month, 1)))
df_neighbourhood.mitte.light<- df_neighbourhood.mitte %>% filter(!grepl("Moabit|Tier|Park",neighbourhood))
ggplot(data=df_neighbourhood.mitte.light ,aes(x=date,y=total_offers,colour=neighbourhood))+theme_fivethirtyeight()+ geom_line(,size=1)+labs(colour="")+ theme(axis.title = element_text(),axis.title.x=element_blank(), axis.text.x = element_text(angle = 90, hjust = 1),legend.text=element_text(size=10),plot.caption=element_text(size=8))+scale_x_date(breaks = pretty_breaks(15))+ ggtitle("Mitte : Full appartments")+labs(caption = "©Clément Lefèvre 2017 (Sources : insideairbnb.com)")+ylab("online offers")+scale_colour_manual(values = palette)
ggplot(data=df_neighbourhood.mitte.light ,aes(x=date,y=mean_price,colour=neighbourhood))+theme_fivethirtyeight()+ geom_line(,size=1)+labs(colour="")+ theme(axis.title = element_text(),axis.title.x=element_blank(), axis.text.x = element_text(angle = 90, hjust = 1),legend.text=element_text(size=10),plot.caption=element_text(size=8))+scale_x_date(breaks = pretty_breaks(15))+ ggtitle("Mitte: Full appartments")+labs(caption = "©Clément Lefèvre 2017 (Sources : insideairbnb.com)")+ylab("euros/night")+scale_colour_manual(values = palette)
library(ggthemes)
library(dplyr)
library(tidyr)
library(ggplot2)
library(ggthemes)
df.per.capita<- read.csv('data/API_SH.XPD.PCAP_DS2_en_csv_v2.csv',skip = 4,stringsAsFactors = FALSE)
str(df.per.capita)
missing.years<- c(1960:1994,2015:2016)
missing.years.columns<- paste0("X",missing.years)
valid.years<- c(1995:2014)
valid.years.columns<- paste0("X",valid.years)
df.per.capita<-df.per.capita %>% select(-one_of(missing.years.columns))
## drop the countries with missing data
df.per.capita<-df.per.capita %>% filter(!is.na(X1995))
str(df.per.capita)
df.per.capita <- df.per.capita %>%    mutate(quartile = ntile(X2014, 4)) %>% arrange((quartile))
df.per.capita<- df.per.capita %>% mutate(quartile = ifelse(quantile==1,"First Quartile",quartile))
library(dplyr)
library(tidyr)
library(ggplot2)
library(ggthemes)
df.per.capita<- read.csv('data/API_SH.XPD.PCAP_DS2_en_csv_v2.csv',skip = 4,stringsAsFactors = FALSE)
str(df.per.capita)
missing.years<- c(1960:1994,2015:2016)
missing.years.columns<- paste0("X",missing.years)
valid.years<- c(1995:2014)
valid.years.columns<- paste0("X",valid.years)
df.per.capita<-df.per.capita %>% select(-one_of(missing.years.columns))
## drop the countries with missing data
df.per.capita<-df.per.capita %>% filter(!is.na(X1995))
str(df.per.capita)
df.per.capita <- df.per.capita %>%    mutate(quartile = ntile(X2014, 4)) %>% arrange((quartile))
df.per.capita<- df.per.capita %>% mutate(quartile = ifelse(quantile==1,"First Quartile",quartile))
library(dplyr)
library(tidyr)
library(ggplot2)
library(ggthemes)
df.per.capita<- read.csv('data/API_SH.XPD.PCAP_DS2_en_csv_v2.csv',skip = 4,stringsAsFactors = FALSE)
str(df.per.capita)
missing.years<- c(1960:1994,2015:2016)
missing.years.columns<- paste0("X",missing.years)
valid.years<- c(1995:2014)
valid.years.columns<- paste0("X",valid.years)
df.per.capita<-df.per.capita %>% select(-one_of(missing.years.columns))
## drop the countries with missing data
df.per.capita<-df.per.capita %>% filter(!is.na(X1995))
str(df.per.capita)
df.per.capita <- df.per.capita %>%    mutate(quartile = ntile(X2014, 4)) %>% arrange((quartile))
df.per.capita<- df.per.capita %>% mutate(quartile = ifelse(quartile==1,"First Quartile",quartile))
df.per.capita<- df.per.capita %>% mutate(quartile = ifelse(quartile==2,"Second Quartile",quartile))
df.per.capita<- df.per.capita %>% mutate(quartile = ifelse(quartile==3,"Third Quartile",quartile))
df.per.capita<- df.per.capita %>% mutate(quartile = ifelse(quartile==4,"Fourth Quartile",quartile))
groupy <-df.per.capita %>% group_by(quartile) %>% summarise_at(valid.years.columns,funs(mean))
gato<-groupy %>% gather(year,expenditure,-quartile)
ggplot(data=gato ,aes(x=year,y=expenditure,colour=quantile)+theme_fivethirtyeight()+ geom_line(size=1)+labs(colour="")+ theme(axis.title = element_text(), axis.title.x=element_blank(), axis.text.x = element_text(angle = 90, hjust = 1),legend.text=element_text(size=10),plot.caption=element_text(size=8))+scale_x_date(breaks = pretty_breaks(15))+scale_colour_manual(values = palette)+ ggtitle("Berlin : Full appartments")+labs(caption = "©Clément Lefèvre 2017 (Sources : insideairbnb.com)")+ylab("euros/night")
ggplot(data=gato ,aes(x=year,y=expenditure,colour=quantile)+theme_fivethirtyeight()+ geom_line(,size=1)+labs(colour="")+ theme(axis.title = element_text(), axis.title.x=element_blank(), axis.text.x = element_text(angle = 90, hjust = 1),legend.text=element_text(size=10),plot.caption=element_text(size=8))+scale_x_date(breaks = pretty_breaks(15))+scale_colour_manual(values = palette)+ ggtitle("Berlin : Full appartments")+labs(caption = "©Clément Lefèvre 2017 (Sources : insideairbnb.com)")+ylab("euros/night")
ggplot(data=gato ,aes(x=year,y=expenditure,colour=quantile))+theme_fivethirtyeight()+ geom_line(,size=1)+labs(colour="")+ theme(axis.title = element_text(), axis.title.x=element_blank(), axis.text.x = element_text(angle = 90, hjust = 1),legend.text=element_text(size=10),plot.caption=element_text(size=8))+scale_x_date(breaks = pretty_breaks(15))+scale_colour_manual(values = palette)+ ggtitle("Berlin : Full appartments")+labs(caption = "©Clément Lefèvre 2017 (Sources : insideairbnb.com)")+ylab("euros/night")
ggplot(data=gato ,aes(x=year,y=expenditure,colour=quantile))+theme_fivethirtyeight()+ geom_line(,size=1)+labs(colour="")+ theme(axis.title = element_text(), axis.title.x=element_blank(), axis.text.x = element_text(angle = 90, hjust = 1),legend.text=element_text(size=10),plot.caption=element_text(size=8))+scale_colour_manual(values = palette)+ ggtitle("Berlin : Full appartments")+labs(caption = "©Clément Lefèvre 2017 (Sources : insideairbnb.com)")+ylab("euros/night")
ggplot(data=gato ,aes(x=year,y=expenditure,colour=quantile))+theme_fivethirtyeight()+ geom_line(,size=1)+labs(colour="")+ theme(axis.title = element_text(), axis.title.x=element_blank(), axis.text.x = element_text(angle = 90, hjust = 1),legend.text=element_text(size=10),plot.caption=element_text(size=8))
ggplot(data=gato ,aes(x=year,y=expenditure,colour=quantile))+theme_fivethirtyeight()+ geom_line(size=1)+labs(colour="")+ theme(axis.title = element_text(), axis.title.x=element_blank(), axis.text.x = element_text(angle = 90, hjust = 1),legend.text=element_text(size=10),plot.caption=element_text(size=8))
gato <- gato %>% mutate(year=gsub('X','',.))
gato <- gato %>% mutate(year=gsub('X','',year))
ggplot(data=gato ,aes(x=year,y=expenditure,colour=quantile))+theme_fivethirtyeight()+ geom_line(size=1)+labs(colour="")+ theme(axis.title = element_text(), axis.title.x=element_blank(), axis.text.x = element_text(angle = 90, hjust = 1),legend.text=element_text(size=10),plot.caption=element_text(size=8))
gato
gato<-groupy %>% gather(year,expenditure,-quartile)
gato <- gato %>% mutate(year=as.numeric(gsub('X','',year)))
ggplot(data=gato ,aes(x=year,y=expenditure,colour=quantile))+theme_fivethirtyeight()+ geom_line(size=1)+labs(colour="")+ theme(axis.title = element_text(), axis.title.x=element_blank(), axis.text.x = element_text(angle = 90, hjust = 1),legend.text=element_text(size=10),plot.caption=element_text(size=8))
ggplot(data=gato ,aes(x=year,y=expenditure,colour=quartile))+theme_fivethirtyeight()+ geom_line(size=1)+labs(colour="")+ theme(axis.title = element_text(), axis.title.x=element_blank(), axis.text.x = element_text(angle = 90, hjust = 1),legend.text=element_text(size=10),plot.caption=element_text(size=8))
ggplot(data=gato ,aes(x=year,y=expenditure,colour=quartile))+theme_fivethirtyeight()+ geom_line(size=1)+labs(colour="")+ theme(axis.title = element_text(), axis.title.x=element_blank(), axis.text.x = element_text(angle = 90, hjust = 1),legend.text=element_text(size=10),plot.caption=element_text(size=8))+scale_x_date(breaks = pretty_breaks(15))+scale_colour_manual(values = palette)+ ggtitle("Berlin : Full appartments")+labs(caption = "©Clément Lefèvre 2017 (Sources : insideairbnb.com)")+ylab("euros/night")
library(dplyr)
library(tidyr)
library(ggplot2)
library(ggthemes)
library(scales)
df.per.capita<- read.csv('data/API_SH.XPD.PCAP_DS2_en_csv_v2.csv',skip = 4,stringsAsFactors = FALSE)
str(df.per.capita)
missing.years<- c(1960:1994,2015:2016)
missing.years.columns<- paste0("X",missing.years)
valid.years<- c(1995:2014)
valid.years.columns<- paste0("X",valid.years)
df.per.capita<-df.per.capita %>% select(-one_of(missing.years.columns))
## drop the countries with missing data
df.per.capita<-df.per.capita %>% filter(!is.na(X1995))
str(df.per.capita)
df.per.capita <- df.per.capita %>%    mutate(quartile = ntile(X2014, 4)) %>% arrange((quartile))
df.per.capita<- df.per.capita %>% mutate(quartile = ifelse(quartile==1,"First Quartile",quartile))
df.per.capita<- df.per.capita %>% mutate(quartile = ifelse(quartile==2,"Second Quartile",quartile))
df.per.capita<- df.per.capita %>% mutate(quartile = ifelse(quartile==3,"Third Quartile",quartile))
df.per.capita<- df.per.capita %>% mutate(quartile = ifelse(quartile==4,"Fourth Quartile",quartile))
groupy <-df.per.capita %>% group_by(quartile) %>% summarise_at(valid.years.columns,funs(mean))
gato<-groupy %>% gather(year,expenditure,-quartile)
gato <- gato %>% mutate(year=as.numeric(gsub('X','',year)))
ggplot(data=gato ,aes(x=year,y=expenditure,colour=quartile))+theme_fivethirtyeight()+ geom_line(size=1)+labs(colour="")+ theme(axis.title = element_text(), axis.title.x=element_blank(), axis.text.x = element_text(angle = 90, hjust = 1),legend.text=element_text(size=10),plot.caption=element_text(size=8))+scale_x_date(breaks = pretty_breaks(15))+scale_colour_manual(values = palette)+ ggtitle("Berlin : Full appartments")+labs(caption = "©Clément Lefèvre 2017 (Sources : insideairbnb.com)")+ylab("euros/night")
ggplot(data=gato ,aes(x=year,y=expenditure,colour=quartile))+theme_fivethirtyeight()+ geom_line(size=1)+labs(colour="")+ theme(axis.title = element_text(), axis.title.x=element_blank(), axis.text.x = element_text(angle = 90, hjust = 1),legend.text=element_text(size=10),plot.caption=element_text(size=8))+scale_colour_manual(values = palette)+ ggtitle("Berlin : Full appartments")+labs(caption = "©Clément Lefèvre 2017 (Sources : insideairbnb.com)")+ylab("euros/night")
ggplot(data=gato ,aes(x=year,y=expenditure,colour=quartile))+theme_fivethirtyeight()+ geom_line(size=1)+labs(colour="")+ theme(axis.title = element_text(), axis.title.x=element_blank(), axis.text.x = element_text(angle = 90, hjust = 1),legend.text=element_text(size=10),plot.caption=element_text(size=8))+ ggtitle("Berlin : Full appartments")+labs(caption = "©Clément Lefèvre 2017 (Sources : insideairbnb.com)")+ylab("euros/night")
ggplot(data=gato ,aes(x=year,y=expenditure,colour=quartile))+theme_fivethirtyeight()+ geom_line(size=1)+labs(colour="")+ theme(axis.title = element_text(), axis.title.x=element_blank(), axis.text.x = element_text(angle = 90, hjust = 1),legend.text=element_text(size=10),plot.caption=element_text(size=8))+ ggtitle("Health expenditure per capita")+labs(caption = "©Clément Lefèvre 2017 (Sources : insideairbnb.com)")+ylab("(current US$)")
ggplot(data=gato ,aes(x=year,y=expenditure,colour=quartile))+theme_fivethirtyeight()+ geom_line(size=1)+labs(colour="")+ theme(axis.title = element_text(), axis.title.x=element_blank(), axis.text.x = element_text(angle = 90, hjust = 1),legend.text=element_text(size=10),plot.caption=element_text(size=8))+ ggtitle("Health expenditure per capita")+ylab("(current US$)")
ggplot(data=gato ,aes(x=year,y=expenditure,colour=quartile))+theme_fivethirtyeight()+ geom_line(size=1)+labs(colour="")+ theme(axis.title = element_text(), axis.title.x=element_blank(), axis.text.x = element_text(angle = 90, hjust = 1),legend.text=element_text(size=10),plot.caption=element_text(size=8))+ ggtitle("Health expenditure per capita")+ylab("(current US$)")+ scale_fill_manual(values=c("#999999", "#E69F00", "#56B4E9"),
name="Experimental\nCondition",
breaks=c("ctrl", "trt1", "trt2"),
labels=c("1", "2 1", "3 2","4"))
ggplot(data=gato ,aes(x=year,y=expenditure,colour=quartile))+theme_fivethirtyeight()+ geom_line(size=1)+labs(colour="")+ theme(axis.title = element_text(), axis.title.x=element_blank(), axis.text.x = element_text(angle = 90, hjust = 1),legend.text=element_text(size=10),plot.caption=element_text(size=8))+ ggtitle("Health expenditure per capita")+ylab("(current US$)")+ scale_fill_manual(values=c("#999999", "#E69F00", "#56B4E9"),
name="Experimental\nCondition",
breaks=c(1:4),
labels=c("1", "2 1", "3 2","4"))
ggplot(data=gato ,aes(x=year,y=expenditure,colour=quartile))+theme_fivethirtyeight()+ geom_line(size=1)+labs(colour="")+ theme(axis.title = element_text(), axis.title.x=element_blank(), axis.text.x = element_text(angle = 90, hjust = 1),legend.text=element_text(size=10),plot.caption=element_text(size=8))+ ggtitle("Health expenditure per capita")+ylab("(current US$)")+ scale_fill_manual(
name="Experimental\nCondition",
breaks=c(1:4),
labels=c("1", "2 1", "3 2","4"))
library(dplyr)
library(tidyr)
library(ggplot2)
library(ggthemes)
library(scales)
df.per.capita<- read.csv('data/API_SH.XPD.PCAP_DS2_en_csv_v2.csv',skip = 4,stringsAsFactors = FALSE)
str(df.per.capita)
missing.years<- c(1960:1994,2015:2016)
missing.years.columns<- paste0("X",missing.years)
valid.years<- c(1995:2014)
valid.years.columns<- paste0("X",valid.years)
df.per.capita<-df.per.capita %>% select(-one_of(missing.years.columns))
## drop the countries with missing data
df.per.capita<-df.per.capita %>% filter(!is.na(X1995))
str(df.per.capita)
df.per.capita <- df.per.capita %>%    mutate(quartile = ntile(X2014, 4)) %>% arrange((quartile))
# df.per.capita<- df.per.capita %>% mutate(quartile = ifelse(quartile==1,"First Quartile",quartile))
# df.per.capita<- df.per.capita %>% mutate(quartile = ifelse(quartile==2,"Second Quartile",quartile))
# df.per.capita<- df.per.capita %>% mutate(quartile = ifelse(quartile==3,"Third Quartile",quartile))
# df.per.capita<- df.per.capita %>% mutate(quartile = ifelse(quartile==4,"Fourth Quartile",quartile))
groupy <-df.per.capita %>% group_by(quartile) %>% summarise_at(valid.years.columns,funs(mean))
gato<-groupy %>% gather(year,expenditure,-quartile)
gato <- gato %>% mutate(year=as.numeric(gsub('X','',year)))
ggplot(data=gato ,aes(x=year,y=expenditure,colour=quartile))+theme_fivethirtyeight()+ geom_line(size=1)+labs(colour="")+ theme(axis.title = element_text(), axis.title.x=element_blank(), axis.text.x = element_text(angle = 90, hjust = 1),legend.text=element_text(size=10),plot.caption=element_text(size=8))+ ggtitle("Health expenditure per capita")+ylab("(current US$)")+ scale_fill_manual(
name="Experimental\nCondition",
breaks=c(1:4),
labels=c("1", "2 1", "3 2","4"))
ggplot(data=gato ,aes(x=year,y=expenditure,colour=quartile))+theme_fivethirtyeight()+ geom_line(size=1)+labs(colour="")+ theme(axis.title = element_text(), axis.title.x=element_blank(), axis.text.x = element_text(angle = 90, hjust = 1),legend.text=element_text(size=10),plot.caption=element_text(size=8))+ ggtitle("Health expenditure per capita")+ylab("(current US$)")#+ scale_fill_manual(
ggplot(data=gato ,aes(x=year,y=expenditure,colour=quartile))+theme_fivethirtyeight()+ geom_line(size=1)+labs(colour="")+ theme(axis.title = element_text(), axis.title.x=element_blank(), axis.text.x = element_text(angle = 90, hjust = 1),legend.text=element_text(size=10),plot.caption=element_text(size=8))+ ggtitle("Health expenditure per capita")+ylab("(current US$)")+ scale_color_manual(labels = c("T999", "T888"), values = c("blue", "red"))
ggplot(data=gato ,aes(x=year,y=expenditure,colour=as.factor(quartile)))+theme_fivethirtyeight()+ geom_line(size=1)+labs(colour="")+ theme(axis.title = element_text(), axis.title.x=element_blank(), axis.text.x = element_text(angle = 90, hjust = 1),legend.text=element_text(size=10),plot.caption=element_text(size=8))+ ggtitle("Health expenditure per capita")+ylab("(current US$)")+ scale_color_manual(labels = c("T999", "T888"), values = c("blue", "red"))
ggplot(data=gato ,aes(x=year,y=expenditure,colour=as.factor(quartile)))+theme_fivethirtyeight()+ geom_line(size=1)+labs(colour="")+ theme(axis.title = element_text(), axis.title.x=element_blank(), axis.text.x = element_text(angle = 90, hjust = 1),legend.text=element_text(size=10),plot.caption=element_text(size=8))+ ggtitle("Health expenditure per capita")+ylab("(current US$)")+ scale_color_manual(labels = c("Q1", "Q2","Q3","Q4"), values = c(1:4))
ggplot(data=gato ,aes(x=year,y=expenditure,colour=as.factor(quartile)))+theme_fivethirtyeight()+ geom_line(size=1)+labs(colour="")+ theme(axis.title = element_text(), axis.title.x=element_blank(), axis.text.x = element_text(angle = 90, hjust = 1),legend.text=element_text(size=10),plot.caption=element_text(size=8))+ ggtitle("Health expenditure per capita")+ylab("(current US$)")+ scale_color_economist(labels = c("Q1", "Q2","Q3","Q4"), values = c(1:4))
ggplot(data=gato ,aes(x=year,y=expenditure,colour=as.factor(quartile)))+theme_fivethirtyeight()+ geom_line(size=1)+labs(colour="")+ theme(axis.title = element_text(), axis.title.x=element_blank(), axis.text.x = element_text(angle = 90, hjust = 1),legend.text=element_text(size=10),plot.caption=element_text(size=8))+ ggtitle("Health expenditure per capita")+ylab("(current US$)")+ scale_color_manual(labels = c("Q1", "Q2","Q3","Q4"), values = c(1:4))
ggplot(data=gato ,aes(x=year,y=expenditure,colour=as.factor(quartile)))+theme_economist()+ geom_line(size=1)+labs(colour="")+ theme(axis.title = element_text(), axis.title.x=element_blank(), axis.text.x = element_text(angle = 90, hjust = 1),legend.text=element_text(size=10),plot.caption=element_text(size=8))+ ggtitle("Health expenditure per capita")+ylab("(current US$)")+ scale_color_manual(labels = c("Q1", "Q2","Q3","Q4"), values = c(1:4))
ggplot(data=gato ,aes(x=year,y=expenditure,colour=as.factor(quartile)))+theme_economist()+ geom_line(size=1)+labs(colour="")+ theme(axis.title = element_text(), axis.title.x=element_blank(), axis.text.x = element_text(angle = 90, hjust = 1),legend.text=element_text(size=10),plot.caption=element_text(size=8))+ ggtitle("Health expenditure per capita")+ylab("(current US$)")+ scale_color_hue(labels = c("Q1", "Q2","Q3","Q4"), values = c(1:4))
ggplot(data=gato ,aes(x=year,y=expenditure,colour=as.factor(quartile)))+theme_economist()+ geom_line(size=1)+labs(colour="")+ theme(axis.title = element_text(), axis.title.x=element_blank(), axis.text.x = element_text(angle = 90, hjust = 1),legend.text=element_text(size=10),plot.caption=element_text(size=8))+ ggtitle("Health expenditure per capita")+ylab("(current US$)")+ scale_color_hue(labels = c("Q1", "Q2","Q3","Q4"))
ggplot(data=gato ,aes(x=year,y=expenditure,colour=as.factor(quartile)))+theme_economist()+ geom_line(size=1)+labs(colour="")+ theme(axis.title = element_text(), axis.title.x=element_blank(), axis.text.x = element_text(angle = 90, hjust = 1),legend.text=element_text(size=10),plot.caption=element_text(size=8))+ ggtitle("Health expenditure per capita")+ylab("(current US$)")+ scale_color_economist(labels = c("Q1", "Q2","Q3","Q4"))
library(dplyr)
library(tidyr)
library(ggplot2)
library(ggthemes)
library(scales)
df.per.capita<- read.csv('data/API_SH.XPD.PUBL_DS2_en_csv_v2.csv',skip = 4,stringsAsFactors = FALSE)
str(df.per.capita)
missing.years<- c(1960:1994,2015:2016)
missing.years.columns<- paste0("X",missing.years)
valid.years<- c(1995:2014)
valid.years.columns<- paste0("X",valid.years)
df.per.capita<-df.per.capita %>% select(-one_of(missing.years.columns))
## drop the countries with missing data
df.per.capita<-df.per.capita %>% filter(!is.na(X1995))
str(df.per.capita)
df.per.capita <- df.per.capita %>%    mutate(quartile = ntile(X2014, 4)) %>% arrange((quartile))
# df.per.capita<- df.per.capita %>% mutate(quartile = ifelse(quartile==1,"First Quartile",quartile))
# df.per.capita<- df.per.capita %>% mutate(quartile = ifelse(quartile==2,"Second Quartile",quartile))
# df.per.capita<- df.per.capita %>% mutate(quartile = ifelse(quartile==3,"Third Quartile",quartile))
# df.per.capita<- df.per.capita %>% mutate(quartile = ifelse(quartile==4,"Fourth Quartile",quartile))
groupy <-df.per.capita %>% group_by(quartile) %>% summarise_at(valid.years.columns,funs(mean))
gato<-groupy %>% gather(year,expenditure,-quartile)
gato <- gato %>% mutate(year=as.numeric(gsub('X','',year)))
ggplot(data=gato ,aes(x=year,y=expenditure,colour=as.factor(quartile)))+theme_economist()+ geom_line(size=1)+labs(colour="")+ theme(axis.title = element_text(), axis.title.x=element_blank(), axis.text.x = element_text(angle = 90, hjust = 1),legend.text=element_text(size=10),plot.caption=element_text(size=8))+ ggtitle("Health expenditure per capita")+ylab("(current US$)")+ scale_color_economist(labels = c("Q1", "Q2","Q3","Q4"))
ggplot(data=gato ,aes(x=year,y=expenditure,colour=as.factor(quartile)))+theme_economist()+ geom_line(size=1)+labs(colour="")+ theme(axis.title = element_text(), axis.title.x=element_blank(), axis.text.x = element_text(angle = 90, hjust = 1),legend.text=element_text(size=10),plot.caption=element_text(size=8))+ ggtitle("Health expenditure, public (% of total health expenditure)")+ylab("(%)")+ scale_color_economist(labels = c("Q1", "Q2","Q3","Q4"))
ggplot(data=gato ,aes(x=year,y=expenditure,colour=as.factor(quartile)))+theme_economist()+ geom_line(size=1)+labs(colour="")+ theme(axis.title = element_text(), axis.title.x=element_blank(), axis.text.x = element_text(angle = 90, hjust = 1),legend.text=element_text(size=10),plot.caption=element_text(size=8))+ ggtitle("Health expenditure, public (% of total health expenditure)")+ylab("(%)")+ scale_color_economist(labels = c("low income countries", "lower middle income","upper middle income","high income countries"))
ggplot(data=gato ,aes(x=year,y=expenditure,colour=as.factor(quartile)))+theme_economist()+ geom_line(size=1)+labs(colour="")+ theme(axis.title = element_text(), axis.title.x=element_blank(), axis.text.x = element_text(angle = 90, hjust = 1),legend.text=element_text(size=10),plot.caption=element_text(size=8))+ ggtitle("Health expenditure, public (% of total health expenditure)")+ylab("%")+ scale_color_economist(labels = c("low income countries", "lower middle income","upper middle income","high income countries"))
